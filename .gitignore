# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

elsevierAPIkey.txt
arxiv-metadata-oai-snapshot.json
arxiv-metadata-oai-snapshot.json
/NeuralNet
/testing
/NeuralNet/testing
.cursorignore
.env
Miniconda3-latest-Linux-x86_64.sh

# Dependency directories
/su-research/node_modules/

# Production build directory
/su-research/build

# Environment variables
/su-research/.env
/su-research/.env.local
/su-research/.env.development.local
/su-research/.env.test.local
/su-research/.env.production.local

# IDEs and editors
/su-research/.idea
/su-research/.project
/su-research/.classpath
/su-research/.c9/
/su-research/*.launch
/su-research/.settings/
/su-research/*.sublime-workspace

# Misc
/su-research/.DS_Store
/su-research/*.pem

# Debug logs
/su-research/npm-debug.log*
/su-research/yarn-debug.log*
/su-research/yarn-error.log*

# Local Netlify folder
/su-research/.netlify/

# macOS files
/su-research/.DS_Store

# Windows files
/su-research/Thumbs.db
/su-research/ehthumbs.db

# Linux files
/su-research/.directory

# Temporary files
/su-research/*.tmp
/su-research/*.swp
/su-research/*.swo
/su-research/*.swp
/su-research/*.swn
/su-research/*.bak
/su-research/*.orig

# Yarn Integrity file
/su-research/.yarn-integrity

# Parcel-bundler cache (if used)
/su-research/.cache

# Next.js build output (if used)
/su-research/.next
/su-research/out

# Gatsby files (if used)
/su-research/.cache/
/su-research/public

# Storybook build outputs
/su-research/storybook-static/

# Jest test coverage
/su-research/coverage

# End-to-end test artifacts (e.g., Cypress)
/su-research/cypress/screenshots
/su-research/cypress/videos

# Log files
/su-research/*.log
/su-research/npm-debug.log*
/su-research/yarn-debug.log*
/su-research/yarn-error.log*

/su-research/public/suVid.mp4