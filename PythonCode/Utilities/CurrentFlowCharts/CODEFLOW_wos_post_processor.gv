digraph G {
concentrate=true;
splines="ortho";
rankdir="LR";
subgraph legend{
    rank = min;
    label = "legend";
    Legend [shape=none, margin=0, label = <
        <table cellspacing="0" cellpadding="0" border="1"><tr><td>Code2flow Legend</td></tr><tr><td>
        <table cellspacing="0">
        <tr><td>Regular function</td><td width="50px" bgcolor='#cccccc'></td></tr>
        <tr><td>Trunk function (nothing calls this)</td><td bgcolor='#966F33'></td></tr>
        <tr><td>Leaf function (this calls nothing else)</td><td bgcolor='#6db33f'></td></tr>
        <tr><td>Function call</td><td><font color='black'>&#8594;</font></td></tr>
        </table></td></tr></table>
        >];
}node_e42b88d8 [label="6: __init__()" name="faculty_set_postprocessor::FacultyPostprocessor.__init__" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_48f635cf [label="70: duplicate_postprocessor()" name="faculty_set_postprocessor::FacultyPostprocessor.duplicate_postprocessor" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_f90e6136 [label="15: extract_faculty_sets()" name="faculty_set_postprocessor::FacultyPostprocessor.extract_faculty_sets" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_7c2da46a [label="60: remove_near_duplicates()" name="faculty_set_postprocessor::FacultyPostprocessor.remove_near_duplicates" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_d4e97ea5 [label="104: __init__()" name="faculty_set_postprocessor::MinHashUtility.__init__" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_50b2fff3 [label="170: compare_signatures()" name="faculty_set_postprocessor::MinHashUtility.compare_signatures" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_74058402 [label="148: compute_signature()" name="faculty_set_postprocessor::MinHashUtility.compute_signature" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_7b56f787 [label="126: generate_hash_functions()" name="faculty_set_postprocessor::MinHashUtility.generate_hash_functions" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_49a63d1a [label="109: tokenize()" name="faculty_set_postprocessor::MinHashUtility.tokenize" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_8d70e33e [label="0: (global)()" name="wos_classification::(global)" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_ed5de51d [label="16: __init__()" name="wos_classification::WosClassification.__init__" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_ef92f437 [label="39: category_finder()" name="wos_classification::WosClassification.category_finder" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_c22b0226 [label="34: check_file_status()" name="wos_classification::WosClassification.check_file_status" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_826561b5 [label="23: construct_categories()" name="wos_classification::WosClassification.construct_categories" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_a69e181c [label="20: get_category_counts()" name="wos_classification::WosClassification.get_category_counts" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_3b2308e5 [label="82: initialize_categories()" name="wos_classification::WosClassification.initialize_categories" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_e59ef554 [label="114: update_category_counts_files_set()" name="wos_classification::WosClassification.update_category_counts_files_set" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_0b274f0a [label="110: update_department_count()" name="wos_classification::WosClassification.update_department_count" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_6165eb42 [label="159: update_department_set_2()" name="wos_classification::WosClassification.update_department_set_2" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_4e2fa577 [label="106: update_faculty_count()" name="wos_classification::WosClassification.update_faculty_count" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_f5ec560b [label="128: update_faculty_set()" name="wos_classification::WosClassification.update_faculty_set" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_e42b88d8 -> node_d4e97ea5 [color="#000000" penwidth="2"];
node_48f635cf -> node_50b2fff3 [color="#CC79A7" penwidth="2"];
node_48f635cf -> node_74058402 [color="#CC79A7" penwidth="2"];
node_48f635cf -> node_49a63d1a [color="#CC79A7" penwidth="2"];
node_7c2da46a -> node_48f635cf [color="#56B4E9" penwidth="2"];
node_7c2da46a -> node_f90e6136 [color="#56B4E9" penwidth="2"];
node_d4e97ea5 -> node_7b56f787 [color="#0072B2" penwidth="2"];
node_8d70e33e -> node_e42b88d8 [color="#D55E00" penwidth="2"];
node_8d70e33e -> node_7c2da46a [color="#D55E00" penwidth="2"];
node_8d70e33e -> node_ed5de51d [color="#D55E00" penwidth="2"];
node_8d70e33e -> node_826561b5 [color="#D55E00" penwidth="2"];
node_8d70e33e -> node_a69e181c [color="#D55E00" penwidth="2"];
node_8d70e33e -> node_4e2fa577 [color="#D55E00" penwidth="2"];
node_ef92f437 -> node_3b2308e5 [color="#CC79A7" penwidth="2"];
node_ef92f437 -> node_e59ef554 [color="#CC79A7" penwidth="2"];
node_ef92f437 -> node_0b274f0a [color="#CC79A7" penwidth="2"];
node_ef92f437 -> node_6165eb42 [color="#CC79A7" penwidth="2"];
node_ef92f437 -> node_4e2fa577 [color="#CC79A7" penwidth="2"];
node_ef92f437 -> node_f5ec560b [color="#CC79A7" penwidth="2"];
node_826561b5 -> node_ef92f437 [color="#0072B2" penwidth="2"];
node_826561b5 -> node_c22b0226 [color="#0072B2" penwidth="2"];
subgraph cluster_063beb93 {
    label="File: faculty_set_postprocessor";
    name="faculty_set_postprocessor";
    style="filled";
    graph[style=dotted];
    subgraph cluster_8ee192aa {
        node_e42b88d8 node_f90e6136 node_7c2da46a node_48f635cf;
        label="Class: FacultyPostprocessor";
        name="FacultyPostprocessor";
        style="filled";
        graph[style=dotted];
    };
    subgraph cluster_7e8944d1 {
        node_d4e97ea5 node_49a63d1a node_7b56f787 node_74058402 node_50b2fff3;
        label="Class: MinHashUtility";
        name="MinHashUtility";
        style="filled";
        graph[style=dotted];
    };
};
subgraph cluster_b784ddc0 {
    node_8d70e33e;
    label="File: wos_classification";
    name="wos_classification";
    style="filled";
    graph[style=dotted];
    subgraph cluster_90d312f4 {
        node_ed5de51d node_a69e181c node_826561b5 node_c22b0226 node_ef92f437 node_3b2308e5 node_4e2fa577 node_0b274f0a node_e59ef554 node_f5ec560b node_6165eb42;
        label="Class: WosClassification";
        name="WosClassification";
        style="filled";
        graph[style=dotted];
    };
};
}
